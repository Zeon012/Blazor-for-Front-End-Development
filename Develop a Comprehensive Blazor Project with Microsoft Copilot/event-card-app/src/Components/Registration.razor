@page "/register"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using event_card_app.Components
@using event_card_app.Components.Models
@inject SessionState SessionState
@inject AttendanceTracker AttendanceTracker
@inject NavigationManager Navigation

<h3>Event Registration</h3>

<EditForm Model="@registration" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Name:</label>
        <InputText @bind-Value="registration.Name" />
        <ValidationMessage For="@(() => registration.Name)" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="registration.Email" />
        <ValidationMessage For="@(() => registration.Email)" />
    </div>
    <div>
        <label>Event:</label>
        <select @bind="registration.EventId">
            <option value="">-- Select Event --</option>
            @foreach (var ev in Events)
            {
                <option value="@ev.Id">@ev.Name</option>
            }
        </select>
        <ValidationMessage For="@(() => registration.EventId)" />
    </div>
    <button type="submit">Register</button>
</EditForm>

@if (successMessage != null)
{
    <div class="alert alert-success">@successMessage</div>
}

<a href="/events">Back to Events</a>

@code {
    private RegistrationModel registration = new();
    private string? successMessage;
    private List<EventModel> Events = new()
    {
        new EventModel { Id = 1, Name = "Tech Conference", Date = DateTime.Now.AddDays(10), Location = "New York" },
        new EventModel { Id = 2, Name = "Music Festival", Date = DateTime.Now.AddDays(20), Location = "Los Angeles" },
        new EventModel { Id = 3, Name = "Art Expo", Date = DateTime.Now.AddDays(30), Location = "Chicago" }
    };

    private void HandleValidSubmit()
    {
        SessionState.CurrentUser = registration.Name;
        AttendanceTracker.RegisterAttendance(registration.EventId ?? 0, registration.Name, registration.Email);
        successMessage = "Registration successful!";
        registration = new RegistrationModel();
    }
}